apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'dagger.hilt.android.plugin'


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.easy.view"
        //为了使用 jetpack compose 所以最小SDK版本为21
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            multiDexEnabled true
        }
    }


    // Butterknife requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }


//    kapt {
//        useBuildCache = true
//    }

    // JetPack Compose config
//    buildFeatures {
//        // Enables Jetpack Compose for this module
//        compose true
//    }
//
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//
//    composeOptions {
//        kotlinCompilerExtensionVersion "0.1.0-dev13"
//    }
}

dependencies {
    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"

    def activity_version = "1.1.0"

    // Java language implementation
    implementation "androidx.activity:activity:$activity_version"
    // Kotlin
    implementation "androidx.activity:activity-ktx:$activity_version"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha05'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    //Collection 扩展程序包含在 Android 的节省内存的集合库中使用的效用函数，包括 ArrayMap、LongParseArray、LruCache 等等。
    implementation "androidx.collection:collection-ktx:1.1.0"

    //Fragment KTX 模块提供了一系列扩展程序以简化 Fragment API。
//    implementation "androidx.fragment:fragment-ktx:1.2.5"

    //navigation 管理fragment 库
//    implementation "androidx.navigation:navigation-runtime-ktx:2.3.0"
//    implementation "androidx.navigation:navigation-fragment-ktx:2.3.0"
//    implementation "androidx.navigation:navigation-ui-ktx:2.3.0"

    //Palette KTX 模块为使用调色板提供惯用的 Kotlin 支持。
//    implementation "androidx.palette:palette-ktx:1.0.0"

//    implementation "androidx.work:work-runtime-ktx:2.4.0"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'



    //hilt
    implementation 'com.google.dagger:hilt-android:2.28-alpha'
    kapt 'com.google.dagger:hilt-android-compiler:2.28-alpha'

    testImplementation 'junit:junit:4.12'

    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.blankj:utilcodex:1.29.0'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
//    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation "com.squareup.okhttp3:okhttp-bom:4.9.0"

    // define any required OkHttp artifacts without version
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor"


    //JetPack Compose dependencies
    // You also need to include the following Compose toolkit dependencies.
//    implementation 'androidx.ui:ui-core:0.1.0-dev13'
//    implementation 'androidx.ui:ui-tooling:0.1.0-dev13'
//    implementation 'androidx.ui:ui-layout:0.1.0-dev13'
//    implementation 'androidx.ui:ui-material:0.1.0-dev13'

}
